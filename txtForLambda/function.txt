import os
import urllib.parse
import boto3 

def lambda_handler(event, context):
	#Lambda関数がS3イベントをトリガーとして呼び出された際に、そのイベントからバケット名を抽出
	bucket = event['Records'][0]['s3']['bucket']['name']
	#Lambda関数がS3イベントをトリガーとして呼び出された際に、そのイベントからオブジェクト(ファイル)のkey名を取得～URLデコード
	key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')
	#保存先のディレクトリ名の値で使用 #例「mp4/abc/example.mp4」
	addDirName = key[:-4] #拡張子「.mp4」除外 #例「mp4/abc/example」
	addDirName = addDirName[4:] #このLambda関数のトリガーには、S3のディレクトリ「mp4/」を設定。その「/mp4」を除外 #例「abc/example」
	addDirName = "_".join(addDirName.split('/')) #例「abc_example」

	#□MediaConvertジョブを実行する関数「make_settings」に引数を渡して呼び出し
	#　この変数「settings」は、client.create_jobのパラメータで使用。
	settings = make_settings(bucket, key, addDirName)
	#ジョブに追加する任意のメタデータ。今回は、'JobCreatedBy': 'videoConvertSample'というユーザーメタデータを指定。
	user_metadata = {
		'JobCreatedBy': 'videoConvertSample',
	}

	#Boto3を使用してAWS Elemental MediaConvertサービスに対するクライアント(APIクライアント)を作成
	client = boto3.client('mediaconvert', endpoint_url = "XXX")

	#AWS Elemental MediaConvertサービスに対して新しいメディア変換ジョブを作成するためのリクエストを送信
	result = client.create_job(
		#メディア変換ジョブを実行するためのIAMロールのARN
		Role = "XXX",
		#作成するメディア変換ジョブに使用するジョブテンプレート。*事前に作成しておく
		JobTemplate = "mp4ToHls",
		#「make_settings(bucket, key)」で作成したディア変換ジョブの詳細な設定を含む情報を指定
		Settings=settings,
		#ジョブに追加する任意のメタデータ。今回は、'JobCreatedBy': 'videoConvertSample'というユーザーメタデータを指定。
		UserMetadata=user_metadata,
	)



def make_settings(bucket, key, addDirName):
	#拡張子を取り除いた値
	basename = os.path.basename(key).split('.')[0]

	return \
	{
		"Inputs": [
			{
				"FileInput": f"s3://{bucket}/{key}",#加工対象のpath
				"AudioSelectors": {
					"AudioSelector1": {
						"Offset": 0,#オーディオストリームの開始位置を秒単位で指定。デフォルトは0。
						"DefaultSelection": "DEFAULT",#デフォルトのオーディオストリームを選択する方法を指定。"DEFAULT"を指定すると、入力コンテナがデフォルトのオーディオトラックを定義している場合、そのトラックが選択される。
						"ProgramSelection": 1#プログラム番号を指定します。これは、複数のプログラム(例えば、マルチプログラムトランスポートストリームなど)が含まれる入力を処理する際に使用。この例では、最初のプログラム(1)が選択される。
					}
				},
			}
		],
		#出力グループをリストで定義。複数指定可能。
		"OutputGroups": [
			{
				#出力グループに名を任意で命名。
				"Name": "Apple HLS",
				#出力グループの設定を指定
				"OutputGroupSettings": {
					#出力グループのタイプを指定。今回は、。HLS形式の出力を行うために、HLS_GROUP_SETTINGSを指定
					"Type": "HLS_GROUP_SETTINGS",
					#出力するHLS形式に関する詳細設定をオブジェクト形式で指定。
					"HlsGroupSettings": {
						#HLS出力ファイルの保存先となるS3バケット内のディレクトリを指定
						"Destination": f"s3://{bucket}/m3u8/{addDirName}/",
					},
				},
				#このグループ内の出力設定をリストで指定。ここでは1つの出力設定を定義。
				"Outputs": [
					{
						"VideoDescription": {
							"Width": 720,
							"Height": 404,
						},
						#出力オーディオストリームの設定。「Inputs>AudioSelectors>AudioSelector1」の設定を適応。
						"AudioDescriptions": [
							{
								"AudioSourceName": "AudioSelector1"
							}
						],
					},
				],
			},
		],
	}